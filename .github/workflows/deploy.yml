name: Build and Deploy Agent Smith

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test (Placeholder)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          
      - name: Placeholder tests
        run: |
          echo "Running placeholder tests"
          # Create a dummy test that always passes
          mkdir -p tests
          echo 'def test_placeholder(): assert True' > tests/test_placeholder.py
          pytest tests/

  build-and-deploy:
    name: Build and Deploy
    needs: test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/agent-smith/agent-smith
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev
      
      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest -f bot_agent_smith/Dockerfile bot_agent_smith/
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} -f bot_agent_smith/Dockerfile bot_agent_smith/
      
      - name: Push Docker image
        run: |
          docker push ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}
      
      - name: Deploy to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Configure Docker to use the VM's service account credentials
            sudo apt-get update && sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
            gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet
            
            # Pull the latest image
            docker pull ${{ env.IMAGE_NAME }}:latest
            
            # Stop and remove existing container
            docker stop agent-smith || true
            docker rm agent-smith || true
            
            # Run the new container
            docker run -d \
              --name agent-smith \
              --restart unless-stopped \
              -v /opt/agent-smith/logs:/app/logs \
              -e VECTOR_DB_TYPE="qdrant" \
              -e QDRANT_URL="${{ secrets.QDRANT_URL }}" \
              -e QDRANT_API_KEY="${{ secrets.QDRANT_API_KEY }}" \
              -e DISCORD_TOKEN="${{ secrets.DISCORD_TOKEN }}" \
              ${{ env.IMAGE_NAME }}:latest